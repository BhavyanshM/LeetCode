Python Data Structures
    - Lists 
        x = [1,2,3,4,5]
        functions: append, insert, pop, remove, sort, reverse, index, count, len, min, max, sum
    - Tuples
        x = (1,2,3,4,5)
        functions: index, count, len, min, max, sum
    - Dictionaries
        x = {'key1': 'value1', 'key2': 'value2'}
        functions: keys, values, items, get, update, pop, popitem, clear, len
    - Sets
        x = {1,2,3,4,5}
        functions: add, remove, discard, pop, clear, len, union, intersection, difference, symmetric_difference, issubset, issuperset, isdisjoint, copy
    - Strings
        x = 'Hello World'
        functions: capitalize, casefold, center, count, encode, endswith, expandtabs, find, format, format_map, index, isalnum, isalpha, isascii, isdecimal, isdigit, isidentifier, islower, isnumeric, isprintable, isspace, istitle, isupper, join, ljust, lower, lstrip, maketrans, partition, replace, rfind, rindex, rjust, rpartition, rsplit, rstrip, split, splitlines, startswith, strip, swapcase, title, translate, upper, zfill, len, max, min
    - Hashable vs Unhashable
        Hashable: int, float, bool, str, tuple, frozenset
        Unhashable: list, dict, set
    - Deque
        x = deque([1,2,3,4,5])
        functions: append, appendleft, clear, copy, count, extend, extendleft, index, insert, pop, popleft, remove, reverse, rotate, maxlen
    - heapq
        x = [1,2,3,4,5]
        functions: heapify, heappush, heappop, heappushpop, heapreplace, nlargest, nsmallest, merge
    


* Get Python cheatsheet for competitive programming
* CGPT Notes

* Tricks:
    - Try out multiple test cases before attempting to arrive at a solution
    - If there's a pattern emerging in test cases, exploit it rather than silo the problem into a category
    - Be careful with pointers in linked lists, trees and graphs. They should be exactly correct. Practice